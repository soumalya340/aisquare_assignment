/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SouSimpleLendingProtocol,
  SouSimpleLendingProtocolInterface,
} from "../SouSimpleLendingProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_simpleCoinAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_souSwapAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BorrowUSDC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositSimpleCoin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositUSDC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
    ],
    name: "Liquidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RepayUSDC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawSimpleCoin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawUSDC",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLATERAL_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INTEREST_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIMPLECOIN_USDC_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "uint256",
        name: "depositedUSDC",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedUSDC",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositedSimpleCoin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "borrowUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositSimpleCoinAsCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "simpleCoinAmount",
        type: "uint256",
      },
    ],
    name: "getCollateralValueInUSDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repayUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "simpleCoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "souSwap",
    outputs: [
      {
        internalType: "contract ISouSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawSimpleCoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015f8380380620015f8833981016040819052620000349162000099565b6001600055600280546001600160a01b039485166001600160a01b031991821617909155600380549385169382169390931790925560048054919093169116179055620000e3565b80516001600160a01b03811681146200009457600080fd5b919050565b600080600060608486031215620000af57600080fd5b620000ba846200007c565b9250620000ca602085016200007c565b9150620000da604085016200007c565b90509250925092565b61150580620000f36000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a0bf1750116100a2578063e6a69ab811610071578063e6a69ab814610251578063f3b1fbdb1461025c578063f688bcfb1461026f578063f75bff2d14610282578063fd25bf3b1461028a57600080fd5b8063a0bf17501461021b578063d0c19dce1461022e578063d9e69a0514610236578063db81f99b1461023e57600080fd5b80635e5c06e2116100de5780635e5c06e21461017e5780637a9fe9ff146101e25780638eff5ef7146101f55780639236a51d1461020857600080fd5b80632f865568146101105780633e413bee1461012557806359a473a1146101555780635b72a33a14610168575b600080fd5b61012361011e3660046112e6565b61029d565b005b600254610138906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600354610138906001600160a01b031681565b610170600581565b60405190815260200161014c565b6101ba61018c3660046112e6565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909185565b604080519586526020860194909452928401919091526060830152608082015260a00161014c565b6101236101f0366004611316565b61047f565b600454610138906001600160a01b031681565b610123610216366004611316565b6106b3565b610170610229366004611316565b6108f3565b610170600281565b610170609681565b61012361024c366004611316565b610a05565b6101706301e1338081565b61012361026a366004611316565b610c29565b61012361027d366004611316565b610dfa565b610170606481565b610123610298366004611316565b61103f565b6102a5611271565b6001600160a01b0381166000908152600160205260408120600201546102ca906108f3565b6001600160a01b03831660009081526001602081905260408220015491925060646102f6609684611345565b610300919061135c565b90508083106103645760405162461bcd60e51b815260206004820152602560248201527f55736572277320636f6c6c61746572616c20726174696f20697320737566666960448201526418da595b9d60da1b60648201526084015b60405180910390fd5b6001600160a01b0384811660009081526001602081905260408083206002810180549085905592810184905560038082018590556004918201949094559254905163a9059cbb60e01b81523393810193909352602483018290529092169063a9059cbb906044016020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e919061137e565b61042a5760405162461bcd60e51b815260040161035b906113a0565b60408051828152602081018590526001600160a01b038716917f3c4b1d42b9c7fa283f6fe657533f6a5a8a7ad1d36f9ef1d9d89ad04485e10d2c910160405180910390a25050505061047c6001600055565b50565b610487611271565b600081116104e35760405162461bcd60e51b8152602060048201526024808201527f426f72726f7720616d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b606482015260840161035b565b336000908152600160205260408120600201546104ff906108f3565b33600090815260016020819052604082200154919250906105219084906113d7565b905060006064610532609684611345565b61053c919061135c565b90508083101561059e5760405162461bcd60e51b815260206004820152602760248201527f496e73756666696369656e7420636f6c6c61746572616c20666f72207468697360448201526620626f72726f7760c81b606482015260840161035b565b60025460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610613919061137e565b61062f5760405162461bcd60e51b815260040161035b906113ea565b33600090815260016020819052604082200180548692906106519084906113d7565b9091555050336000818152600160205260409081902042600490910155517f0eb9c34d34198a3c7869c2ee7d54066cbc8798a2c8a7227c415e15eee85a8abb9061069e9087815260200190565b60405180910390a250505061047c6001600055565b6000811161070f5760405162461bcd60e51b815260206004820152602360248201527f526570617920616d6f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161035b565b33600090815260016020819052604090912001546107625760405162461bcd60e51b815260206004820152601060248201526f4e6f2061637469766520626f72726f7760801b604482015260640161035b565b336000908152600160208190526040822090810154600490910154610787919061129b565b33600090815260016020819052604082200154919250906107a99083906113d7565b9050828110156107fb5760405162461bcd60e51b815260206004820152601960248201527f526570617920616d6f756e742065786365656473206465627400000000000000604482015260640161035b565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610852573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610876919061137e565b6108925760405162461bcd60e51b815260040161035b906113ea565b61089c8382611418565b3360008181526001602081815260409283902091820194909455426004909101555185815290917f25384730156f33cc4feb54d0f66a665c289760ad997314bf888de5d9b970914f910160405180910390a2505050565b600354600480546040516370a0823160e01b81526001600160a01b039182169281019290925260009283929116906370a0823190602401602060405180830381865afa158015610947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096b919061142b565b600480546040516389f2a87160e01b8152918201869052602482018390526001600160a01b03168031604483018190529293506000916389f2a87190606401602060405180830381865afa1580156109c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109eb919061142b565b905060006109fb826107d0611345565b9695505050505050565b610a0d611271565b60008111610a2d5760405162461bcd60e51b815260040161035b90611444565b33600090815260016020526040902054811115610a8c5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74206465706f736974656420555344430000000000604482015260640161035b565b336000908152600160208190526040822090810154600490910154610ab1919061129b565b3360009081526001602052604081205491925090610ad09083906113d7565b905082811015610b2e5760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e742062616c616e636520616674657220696e746572604482015262195cdd60ea1b606482015260840161035b565b610b388382611418565b336000818152600160205260409081902092835542600390930192909255600254915163a9059cbb60e01b81526004810191909152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc919061137e565b610be85760405162461bcd60e51b815260040161035b906113ea565b60405183815233907f23ee1b877cb0081138b4973c5b2eca0133c573ad526550935d83aaade37666ca9060200160405180910390a2505061047c6001600055565b60008111610c495760405162461bcd60e51b815260040161035b9061148a565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb5919061142b565b1015610d035760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742053696d706c65436f696e2062616c616e636500604482015260640161035b565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e919061137e565b610d9a5760405162461bcd60e51b815260040161035b906113a0565b3360009081526001602052604081206002018054839290610dbc9084906113d7565b909155505060405181815233907f6f391eb4aa3569101e9428546b756329734760eeef5bcf43b228d58eea61569f906020015b60405180910390a250565b60008111610e1a5760405162461bcd60e51b815260040161035b9061148a565b6002546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e86919061142b565b1015610ed45760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420555344432062616c616e636500000000000000604482015260640161035b565b3360009081526001602052604090205415610f3c57336000908152600160208190526040822090810154600490910154610f0e919061129b565b33600090815260016020819052604082200180549293508392909190610f359084906113d7565b9091555050505b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb7919061137e565b610fd35760405162461bcd60e51b815260040161035b906113ea565b3360009081526001602052604081208054839290610ff29084906113d7565b9091555050336000818152600160205260409081902042600390910155517fe7440f6772025dec9be06ba934e6ee5289b73533ee2136ba668f6cb6ea3f56a890610def9084815260200190565b611047611271565b600081116110675760405162461bcd60e51b815260040161035b90611444565b336000908152600160205260409020600201548111156110c95760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742053696d706c65436f696e2062616c616e636500604482015260640161035b565b336000908152600160205260408120600201546110e7908390611418565b905060006110f4826108f3565b336000908152600160208190526040822001549192509060649061111a90609690611345565b611124919061135c565b9050808210156111875760405162461bcd60e51b815260206004820152602860248201527f496e73756666696369656e7420636f6c6c61746572616c2061667465722077696044820152671d1a191c985dd85b60c21b606482015260840161035b565b33600090815260016020526040812060020180548692906111a9908490611418565b909155505060035460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156111ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611223919061137e565b61123f5760405162461bcd60e51b815260040161035b906113a0565b60405184815233907f1d6a958755dd9d8f2b22f33c9a366596875fd8fb9c9031d843eeb37f623bc5c79060200161069e565b60026000540361129457604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000806112a88342611418565b905060006112bb6301e133806064611345565b826112c7600588611345565b6112d19190611345565b6112db919061135c565b925050505b92915050565b6000602082840312156112f857600080fd5b81356001600160a01b038116811461130f57600080fd5b9392505050565b60006020828403121561132857600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176112e0576112e061132f565b60008261137957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561139057600080fd5b8151801515811461130f57600080fd5b6020808252601a908201527f53696d706c65436f696e207472616e73666572206661696c6564000000000000604082015260600190565b808201808211156112e0576112e061132f565b6020808252601490820152731554d110c81d1c985b9cd9995c8819985a5b195960621b604082015260600190565b818103818111156112e0576112e061132f565b60006020828403121561143d57600080fd5b5051919050565b60208082526026908201527f576974686472617720616d6f756e74206d75737420626520677265617465722060408201526507468616e20360d41b606082015260800190565b60208082526025908201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604082015264068616e20360dc1b60608201526080019056fea26469706673582212200d0eaccce1fe0da53984851904bb3d15a760bcca5f7d3faa954679252ef99c6864736f6c63430008140033";

type SouSimpleLendingProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SouSimpleLendingProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SouSimpleLendingProtocol__factory extends ContractFactory {
  constructor(...args: SouSimpleLendingProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SouSimpleLendingProtocol";
  }

  deploy(
    _usdcAddress: string,
    _simpleCoinAddress: string,
    _souSwapAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SouSimpleLendingProtocol> {
    return super.deploy(
      _usdcAddress,
      _simpleCoinAddress,
      _souSwapAddress,
      overrides || {}
    ) as Promise<SouSimpleLendingProtocol>;
  }
  getDeployTransaction(
    _usdcAddress: string,
    _simpleCoinAddress: string,
    _souSwapAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _usdcAddress,
      _simpleCoinAddress,
      _souSwapAddress,
      overrides || {}
    );
  }
  attach(address: string): SouSimpleLendingProtocol {
    return super.attach(address) as SouSimpleLendingProtocol;
  }
  connect(signer: Signer): SouSimpleLendingProtocol__factory {
    return super.connect(signer) as SouSimpleLendingProtocol__factory;
  }
  static readonly contractName: "SouSimpleLendingProtocol";
  public readonly contractName: "SouSimpleLendingProtocol";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SouSimpleLendingProtocolInterface {
    return new utils.Interface(_abi) as SouSimpleLendingProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SouSimpleLendingProtocol {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SouSimpleLendingProtocol;
  }
}
